<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>小马的杂货铺</title><link href="/" rel="alternate"></link><link href="/feeds/xue-ji-neng.atom.xml" rel="self"></link><id>/</id><updated>2016-02-20T16:50:00+08:00</updated><entry><title>快速学习，并不是啥都要学一万小时</title><link href="/kuai-su-xue-xi-bing-bu-shi-sha-du-yao-xue-yi-mo-xiao-shi.html" rel="alternate"></link><updated>2016-02-20T16:50:00+08:00</updated><author><name>Jonym</name></author><id>tag:,2016-02-20:kuai-su-xue-xi-bing-bu-shi-sha-du-yao-xue-yi-mo-xiao-shi.html</id><summary type="html">&lt;p&gt;大家都知道著名的一万小时定律，说如果你要成为某件事情的专家，你需要一万小时，这句话虽然也有争议，但我个人觉得是整体是没有问题的，想在某个领域成为顶尖人物，确实需要付出更多的努力，可是，绝大多数时候，我们并不需要自己在每一个领域都成为专家，工作要求的技能变的越来越多，成为所谓的“T”型人才（在某一项很专业，其他的也会很多），成为了越来越多的人的追求，我曾经和一个朋友聊天，他最近想找份新工作，我说你最擅长的是啥？他的回答除了他已有的一些能力外，特别说了一点，随着工作需要的变化，我可以随时用最短的时间，学会某项技能。这个回答不仅有趣，而且充满了对自我快速学习的自信。&lt;/p&gt;
&lt;p&gt;多一项技能确实在很多情况下会给工作带来便利，以最常见的P图为例，你不会P图，甚至连学习个美图秀秀你都不愿意，那就只有求人咯。成为专家需要一万小时，那么学会某项技能，并且能够掌握需要多少时间呢？网上说要20小时，我自觉天赋不足，个人感觉大概要100小时。&lt;/p&gt;
&lt;p&gt;小马的快速掌握技能法基本分四步：&lt;/p&gt;
&lt;p&gt;第一步：设定学习目标，根据目的设定目标是特别重要的，比如说学习编程，你是想成为程序员啊，还是想自己能写点简单的程序就满意了，还是你能读懂代码就行，或者是你了解编程的基本逻辑就行。技能是为了学来用的，追求学习的完美是成本较高的一件事。&lt;/p&gt;
&lt;p&gt;第二步：找一个关于该技能的系统性的教程，从头到尾走一遍，可以选择文字类的比如书，也可以是视频教学，书的好处是速度快，而视频的好处在于被动，其实这是学习一个技能最痛苦的一步，因为比较枯燥，但是这样做会对将来会有一个好的基础，这个过程中，如果遇到自己不懂的问题，深入钻研这个某个问题会浪费大量的时间，大概有个印象过就行，也许你在接下来的学习中就懂了，也许你在未来的应用中根本用不到，如果真遇到了，也知道回来查哪个地方。&lt;/p&gt;
&lt;p&gt;第三步：找个项目做，洋气点的说法叫做“Do by learn”,很多技能的教学就是全案例的，不要懒，做案例是最容易掌握技能的方法，最好是有综合大项目，就拿我&lt;a href="jonym.com"&gt;小马的杂货铺&lt;/a&gt;这个博客来说，我通过他练习了html、css、python、github、AWS、Linux、markdown、域名部署等等，未来所有我想关于编程试验的东西，都可以在这里尝试，这比我在学校学了四年信息管理与信息系统要有效的多。&lt;/p&gt;
&lt;p&gt;第四步：总有解决不了的问题吧，除了在百度上搜索那些似是而非，雌雄难辨的解决方案外，最好的方法，就是找只大神做教练，大神的好处不仅仅可以在关键时间予以指点，更重要的是给予方向，告诉你，这条路是死的，这条路肯定能走下去，我学ps的时候，我的大神就是我们家门口影楼的修图师，啥事都能解决，找不到大神怎么办，用“在行”（一款可以找到牛人的App）啊，需要啥大神，上面都有。&lt;/p&gt;
&lt;p&gt;用这种方法，可以迅速是你掌握一项技能，技能可以短期学习，但是素养还是需要长期培养的，比如审美的能力，解决问题的能力，当众表达的能力，都需要长期有意识的培养，另外再某一个领域的一万小时，该积累还是不能偷懒的。&lt;/p&gt;
&lt;p&gt;想收听本期节目请在荔枝FM搜索FM1282762小马的杂货铺，或者直接点击&lt;a href="http://www.lizhi.fm/1282762/2518470392883826694"&gt;这里&lt;/a&gt;。&lt;/p&gt;</summary><category term="学习"></category></entry><entry><title>在Pelican下使用blue-penguin的小心得（续）</title><link href="/zai-pelicanxia-shi-yong-blue-penguinde-xiao-xin-de-xu.html" rel="alternate"></link><updated>2015-11-23T21:20:00+08:00</updated><author><name>Jonym</name></author><id>tag:,2015-11-23:zai-pelicanxia-shi-yong-blue-penguinde-xiao-xin-de-xu.html</id><summary type="html">&lt;p&gt;本来是要换掉blue-penguin这个主题换成pelican-clean-blog或者pure，但事实上每一个主题都有自己的缺陷，当我实在没有办法的时候，终于还是决定继续使用这个主题，并且打开Google搜索“如何制作pelican theme”，然后决定自己修改这个主题，后来发现其实也没有太难，两天的时间基本上都搞定了，下面来说一下我都修改了些什么内容。
本来是要换掉blue-penguin这个主题换成pelican-clean-blog或者pure，但事实上每一个主题都有自己的缺陷，当我实在没有办法的时候，终于还是决定继续使用这个主题，并且打开Google搜索“如何制作pelican theme”，然后决定自己修改这个主题，后来发现其实也没有太难，两天的时间基本上都搞定了，下面来说一下我都修改了些什么内容。
本来是要换掉blue-penguin这个主题换成pelican-clean-blog或者pure，但事实上每一个主题都有自己的缺陷，当我实在没有办法的时候，终于还是决定继续使用这个主题，并且打开Google搜索“如何制作pelican theme”，然后决定自己修改这个主题，后来发现其实也没有太难，两天的时间基本上都搞定了，下面来说一下我都修改了些什么内容。&lt;/p&gt;
&lt;p&gt;那么我们先来看一下，theme的文档结构是怎样的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;├── static
│   ├── css
│   └── images
└── templates
    ├── archives.html         // 显示归类
    ├── period_archives.html  // 按照日期归类
    ├── article.html          // 文章处理
    ├── author.html           // 作者处理
    ├── authors.html          // 列出所有文章的作者
    ├── categories.html       // 分类汇总
    ├── category.html         // 分类处理
    ├── index.html            // 首页显示所有文章
    ├── page.html             // 页面处理
    ├── tag.html              // 标签处理
    └── tags.html             // 标签汇总，生成云标签
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;内容引自&lt;a href="http://pelican-docs-zh-cn.readthedocs.org/en/latest/themes.html"&gt;http://pelican-docs-zh-cn.readthedocs.org/en/latest/themes.html&lt;/a&gt;，与主题不完全符合，意思理解即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;在主页中使用摘要&lt;/h4&gt;
&lt;p&gt;blue-penguin的主界面是显示全部文章内容，有人说不能使用Pelican不能使用摘要功能，只能截取固定字数的文字作为摘要，其实完全不是，我们先来看一下&lt;code&gt;templates&lt;/code&gt;文件夹下的&lt;code&gt;index.html&lt;/code&gt;是怎么写的。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% extends &amp;quot;base.html&amp;quot; %}

{% block content %}
{% set date = None %}
{% for article in articles_page.object_list %}
{%   if date != article.date.date() %}
{%     set first_article_of_day = True %}
{%   else %}
{%     set first_article_of_day = False %}
{%   endif %}
{%   set date = article.date.date() %}
{%   include &amp;quot;article_stub.html&amp;quot; %}
{% endfor %}

{% include &amp;quot;pagination.html&amp;quot; %}
{% endblock %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意&lt;code&gt;{%   include "article_stub.html" %}&lt;/code&gt;,内容显示他直接引用的博客正文的内容，也太懒点了吧，看了看别人都是怎么写的最后做了如下的设计，不能直接改动&lt;code&gt;article_stub.html&lt;/code&gt;,不然博客文章也都出问题，首先复制&lt;code&gt;templates&lt;/code&gt;文件夹下的&lt;code&gt;article_stub.html&lt;/code&gt;，并将其改名为&lt;code&gt;index_stub.html&lt;/code&gt;，然后将&lt;code&gt;templates&lt;/code&gt;文件夹下的&lt;code&gt;index.html&lt;/code&gt;中&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{%   include &amp;quot;article_stub.html&amp;quot; %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;改为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{%   include &amp;quot;index_stub.html&amp;quot; %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后去修改&lt;code&gt;index_stub.html&lt;/code&gt;文件，将&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{{ article.content }}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;改为&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% if article.summary %}
{{ article.summary|truncate(200) }}
{% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果用markdown里面加入summary，那么主页将显示summary内容，如果没有，将会取文章前200个字符，当然200时通过&lt;code&gt;truncate(200)&lt;/code&gt;定义的，可以改，这里要注意的是如果食用摘要功能，在正文中需要再写一次，进入正文后无法看到摘要。
除此之外，还有一个重要的点就是在&lt;code&gt;index_stub.html&lt;/code&gt;中需要删除倒数第二行代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% include &amp;quot;disqus.html&amp;quot; %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;否则如果添加disqus的评论功能，主页会出现评论项目。&lt;/p&gt;
&lt;h4&gt;修复网站标题与home按钮点击无法正常回到主页&lt;/h4&gt;
&lt;p&gt;上篇文章说过这个问题，我做了一个假的Home，但是假的就是假的，还是想弄成真的，其实真正做起来也没有太难，关键是找对地方。打开打开&lt;code&gt;templates&lt;/code&gt;文件夹下的&lt;code&gt;base.html&lt;/code&gt;，找到如下两段代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% if DISPLAY_HOME or DISPLAY_HOME is not defined %}
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt;&lt;span class="err"&gt;{%&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="na"&gt;output_file =&lt;/span&gt;&lt;span class="s"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;html&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;%}&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;selected&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;{%&lt;/span&gt; &lt;span class="na"&gt;endif&lt;/span&gt; &lt;span class="err"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 {% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以及&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;header_box&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ SITENAME }}&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        {% if SITESUBTITLE %}
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ SITESUBTITLE }}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    {% endif %}
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第一段对应是Home，第二段对应的是博客的主标题，两个的改法相同，将&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;href=&amp;quot;{{ SITEURL }}&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;改成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;href=&amp;quot;../..&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就可以了。
在第二段代码中我们还发现了添加副标题的功能，可以在配置文件&lt;code&gt;pelicanconf.py&lt;/code&gt;中添加一段比如&lt;code&gt;SITESUBTITLE = u"JonyM's Blog"&lt;/code&gt;效果相当漂亮，谁用谁知道。&lt;/p&gt;
&lt;h4&gt;修改底部文字&lt;/h4&gt;
&lt;p&gt;官方给到到底部文字始终是&lt;code&gt;Blue Penguin Theme · Powered by Pelican · Atom Feed&lt;/code&gt;如果想添加一些关于自己的标记，版权声明，甚至备案如何做呢？方法是，打开&lt;code&gt;templates&lt;/code&gt;文件夹下的&lt;code&gt;base.html&lt;/code&gt;，找到如下代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://github.com/jody-frankowski/blue-penguin&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blue Penguin&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; Theme
    &lt;span class="ni"&gt;&amp;amp;middot;&lt;/span&gt;
    Powered by &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://getpelican.com&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Pelican&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    {% if FEED_ALL_ATOM %}
    &lt;span class="ni"&gt;&amp;amp;middot;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/{{ FEED_ALL_ATOM }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Atom Feed&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    {% endif %}
    {% if FEED_ALL_RSS %}
    &lt;span class="ni"&gt;&amp;amp;middot;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ SITEURL }}/{{ FEED_ALL_RSS }}&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Rss Feed&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    {% endif %}
&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在footer标签中间添加一个p标签，例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Copyright © &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../pages/about-me&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;JunMa&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="ni"&gt;&amp;amp;middot;&lt;/span&gt;
    This work is licensed under a
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://creativecommons.org/licenses/by/4.0/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CC BY 4.0&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;至于具体要加什么内容就看你自己喽。&lt;/p&gt;
&lt;p&gt;将一个跟自己的想象差很远的主题，做成自己喜欢的样子是一件特别有成就感的事情，添加了Disqus的评论系统和Google的分析系统后，果然变的越来越好用了，不过依然有三个问题没有解决。
1.就是国内访问的速度问题，一直很慢而且经常崩溃。
2.页面无法被baidu抓取到，这不是个技术博客，对我来讲这很重要。
3.字体很丑，有大神用云字体解决这个问题，我也想试试，不过目前还没有成功。&lt;/p&gt;
&lt;p&gt;估计接下来可能会选择不在Github而直接转为亚马逊的云主机，慢慢来吧，一切都会顺利的。&lt;/p&gt;</summary><category term="编程"></category></entry><entry><title>在Pelican下使用blue-penguin的小心得</title><link href="/zai-pelicanxia-shi-yong-blue-penguinde-xiao-xin-de.html" rel="alternate"></link><updated>2015-11-21T22:10:00+08:00</updated><author><name>Jonym</name></author><id>tag:,2015-11-21:zai-pelicanxia-shi-yong-blue-penguinde-xiao-xin-de.html</id><summary type="html">&lt;h4&gt;选择Pelican编写博客都原因&lt;/h4&gt;
&lt;p&gt;如果你是程序员，看到此文肯定会喷我，我不是程序员，所以里面有大量超级low的操作，你们就忍忍吧，不希望我误导大家，就请在下面的回复里补充，小马感激不尽。&lt;/p&gt;
&lt;p&gt;在博客已经算是落后产物的当下，选择做一个博客是个有趣的决定，一方面是因为秉承“做中学”的原则，总觉得既然想学点编程，总不能天天只看教程什么都不做，另一方面也确实发现随着工作年限的积累，需要开始给自己积累些文字性的东西了，没有用像新浪博客这种东西的原因，纯是因为感觉自己编的博客比较diao而已。&lt;/p&gt;
&lt;p&gt;选择Pelican的原因是，我只学了点Python，当时小勾推荐用的是Jekyll，即便他说不用学Ruby也能用，但事实上我的电脑死活装不上去，而且完全不知道为什么。我觉得小白们应该和我有一样的感觉，大神轻易部署的环境，到自己的电脑里死活装不上，而且根本不知道为什么。博客部署还是用的Github pages，事实上对于一个非程序员而言，如果不是这个博客，可能一辈子都不知道Github究竟是什么鬼。&lt;/p&gt;
&lt;h4&gt;使用的环境&lt;/h4&gt;
&lt;p&gt;先整体介绍一下我的环境：&lt;/p&gt;
&lt;h5&gt;系统环境：OS X 10.10.5&lt;/h5&gt;
&lt;p&gt;Win好还是Mac好，虽然乔老爷子仙逝之后，苹果的创造力有所下降，而且微软也出现了Surface这种大牛货，但是不要和Mac用户讨论谁好，Mac的好是弥漫式的，也许仅仅体现在一个字体的现实效果上，而且用Mac，你可以体验到各种神器。当然，为了避免某些尴尬，建议大家安装一个Parallels Desktop。&lt;/p&gt;
&lt;h5&gt;IDE:Xcode&lt;/h5&gt;
&lt;p&gt;什么是IDE对于小白来说，这就是个问题，引用百度百科的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IDE集成开发环境（简称IDE）软件是用于程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然大牛们会说一句，就这点东西，用文本编辑还不够么，确实不够，越是大神，越能脱离工具的控制，越是小白，越需要工具帮助。Xcode是苹果程序员必备开发软件，本以为这个东西会很大，但是打开单个的html或者markdown文档速度相当的快。&lt;/p&gt;
&lt;h5&gt;markdown文档工具：马克飞象&lt;/h5&gt;
&lt;p&gt;这是一款专门为印象笔记设计的markdown工具，为什么要用它，真比其他的好用多少么？当然没有，只是在一次会议上，打开马克飞象做记录，周围的人都来问这是什么东西，好吧，虚荣心让我已经离不开他了。&lt;/p&gt;
&lt;h5&gt;GitHub工具：GitHub Desktop for Mac&lt;/h5&gt;
&lt;p&gt;不是程序员就别老学人家用Terminal操作了，你确定你都知道自己干了些什么么，GitHub Desktop是官方给的工具，直接改文件里的内容，用他更新，棒棒哒。&lt;/p&gt;
&lt;h5&gt;翻墙软件：VPNPP&lt;/h5&gt;
&lt;p&gt;别问为什么了，不翻下载某些东西的时候就是报错，某些网站就是上不去，某些教程就是查不到，别找免费的了，省点钱不够闹心的。&lt;/p&gt;
&lt;h5&gt;其他的环境：Virtualenv工具、Python 2.7&lt;/h5&gt;
&lt;p&gt;使用Virtualenv的原因很简单，就是Pelican也出现了死活安不上的问题，用Virtualenv就都解决了，Python2.7是自带的，还有其他的乱七八糟也不知道安了多少插件，教程实在太多了，我这里就不写了，这篇文章重要是写关于blue-penguin的设置问题。&lt;/p&gt;
&lt;h4&gt;blue-penguin的设置与使用&lt;/h4&gt;
&lt;p&gt;先上一张图，这是写这片文章之前的图：
&lt;img alt="aimage" src="/images/1448118648087.png" /&gt;
有可能大家看到这篇文章的时候，这个博客已经不用这个主题了，为什么我后面会说。&lt;/p&gt;
&lt;p&gt;选择这个主题的主要原因是，这个主题很简单，元素少，内容文章显示内容多，符合我的审美情趣，网址是：&lt;a href="https://github.com/jody-frankowski/blue-penguin"&gt;https://github.com/jody-frankowski/blue-penguin&lt;/a&gt;
我现在这个阶段用Pelican非常简单，写好文章，存储称为.md格式，放在content文件夹下，然后用Terminal做如下操作&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd pelican ＃打开pelican文件夹 
source bin/activate ＃打开Virtualenv
cd jonymblog ＃打开项目文件夹（jonymblog是生成的文件夹名）
make html 
make publish
make serve ＃各种生成，生成完以后就可以登陆localhost:8000登陆
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果你复制以上代码，并输入到terminal当中，点击回车，没有报错的话就在output文件夹里面生成了最新的html文件，全部复制并粘贴到与github链接的文件夹中，全部替换，并利用GitHub Desktop更新就好，所以关于Pelican的设置完全就取决于pelicanconf.py这个文件到底是怎么设置的，那我先输出一下我的设置文件，然后一点点说里面这么设置的原因：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Jonym&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;小马的杂货铺&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://jonym.com&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;zh_CN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %H:%M:%S&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh_CN&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;en_US&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blue-penguin&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;jonym&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# all defaults to True.&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_HEADER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_FOOTER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_HOME&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_MENU&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# provided as examples, they make ‘clean’ urls. used by MENU_INTERNAL_PAGES.&lt;/span&gt;
&lt;span class="c"&gt;#TAGS_URL           = &amp;#39;tags&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#TAGS_SAVE_AS       = &amp;#39;tags/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;HOME_URL&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;HOME_SAVE_AS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ABOUT_URL&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pages/about-me&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ABOUT_SAVE_AS&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pages/about-me.html&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#AUTHORS_URL        = &amp;#39;authors&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#AUTHORS_SAVE_AS    = &amp;#39;authors/index.html&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#CATEGORIES_URL     = &amp;#39;categories&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#CATEGORIES_SAVE_AS = &amp;#39;categories/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARCHIVES_URL&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;archives&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARCHIVES_SAVE_AS&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;archives/index.html&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# use those if you want pelican standard pages to appear in your menu&lt;/span&gt;
&lt;span class="n"&gt;MENU_INTERNAL_PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c"&gt;#(&amp;#39;Tags&amp;#39;, TAGS_URL, TAGS_SAVE_AS),&lt;/span&gt;
    &lt;span class="c"&gt;#(&amp;#39;Authors&amp;#39;, AUTHORS_URL, AUTHORS_SAVE_AS),&lt;/span&gt;
    &lt;span class="c"&gt;#(&amp;#39;Categories&amp;#39;, CATEGORIES_URL, CATEGORIES_SAVE_AS),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Home&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;HOME_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;HOME_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Archives&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ARCHIVES_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ARCHIVES_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;About Me&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ABOUT_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ABOUT_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# additional menu items&lt;/span&gt;
&lt;span class="c"&gt;#MENUITEMS = (&lt;/span&gt;
&lt;span class="c"&gt;#    (&amp;#39;GitHub&amp;#39;, &amp;#39;https://github.com/&amp;#39;),&lt;/span&gt;
&lt;span class="c"&gt;#    (&amp;#39;Linux Kernel&amp;#39;, &amp;#39;https://www.kernel.org/&amp;#39;),&lt;/span&gt;
&lt;span class="c"&gt;#)&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Pelican&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://getpelican.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Python.org&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://python.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Jinja2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://jinja.pocoo.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;You can modify those links in your config file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;You can add links in your config file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Another social link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c"&gt;#RELATIVE_URLS = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;大家看到#号就知道，这是被我备注掉的代码，正常来讲应该是删除掉，但是难免有一天你又突然发现有些东西需要，所以我基本上不删除代码，作为资深菜鸟，要把用过的代码都放着，万一想再用的时候找不到，就悲剧了。下面一点点说里面重要的设置内容。&lt;/p&gt;
&lt;h5&gt;将blun-penguin设置为主题&lt;/h5&gt;
&lt;p&gt;从官方下载主题文件到文件夹中，并在pelicanconf.py添加一行代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;blue-penguin&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样就可以了，主题到文件说明中要求复制如下代码到pelicanconf.py中，先照着做，然后改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# all the following settings are *optional*&lt;/span&gt;

&lt;span class="c"&gt;# all defaults to True.&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_HEADER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_FOOTER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_HOME&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DISPLAY_MENU&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="c"&gt;# provided as examples, they make ‘clean’ urls. used by MENU_INTERNAL_PAGES.&lt;/span&gt;
&lt;span class="n"&gt;TAGS_URL&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAGS_SAVE_AS&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;tags/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AUTHORS_URL&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;authors&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;AUTHORS_SAVE_AS&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;authors/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORIES_URL&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;categories&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORIES_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;categories/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARCHIVES_URL&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;archives&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARCHIVES_SAVE_AS&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;archives/index.html&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# use those if you want pelican standard pages to appear in your menu&lt;/span&gt;
&lt;span class="n"&gt;MENU_INTERNAL_PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Tags&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TAGS_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TAGS_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Authors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AUTHORS_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AUTHORS_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Categories&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CATEGORIES_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CATEGORIES_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Archives&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ARCHIVES_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ARCHIVES_SAVE_AS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# additional menu items&lt;/span&gt;
&lt;span class="n"&gt;MENUITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;GitHub&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Linux Kernel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://www.kernel.org/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;设置日期格式&lt;/h5&gt;
&lt;p&gt;当大家放入一篇测试文章的时候，发现日期格式不太对啊，月份并没有以英文简写的方式出现，而是以阿拉伯数字的形式出现，不要太丑好吧，虽然也加了很多有用没用的代码在里面，但最后发现，最关键的是在pelicanconf.py添加这行代码。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;en_US&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实就算括号里什么都不添加，文件找不到后默认还是英文的月份，但没这行就是达不到要的效果。&lt;/p&gt;
&lt;h5&gt;无效的Home解决方案&lt;/h5&gt;
&lt;p&gt;正常来讲，点击Home或者点击博客名称都应该回到首页，但是自动生成的文件，并没有，网页给到的反馈是反应了一下，但是没有变化，对比官方的博客发现有如下问题，官方的相关html标签内容中是这样设置的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../..&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Computer Stuff&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;而我们生成的是这么设置的：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;小马的杂货铺&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这个href标签的设置也太坑了吧，我也不能产生的所有html页面全都打开改一遍吧，当然据说有人可以对某个文件夹中所有html相同的字段进行修改，如果有这种神器当然好，不过我没找到能用的，于是做了如下的设置：
首先将官方要求的DISPLAY_HOME设置成False&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DISPLAY_HOME&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后又添加了一个假的Home&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;HOME_URL&lt;/span&gt;            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;HOME_SAVE_AS&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以及在MENU_INTERNAL_PAGES中添加('Home',HOME_URL,HOME_SAVE_AS),
这样虽然点击博客名称虽然仍然没有解决，但是Home按钮正常了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此处肯定有更好的解决方案，只是我不会&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;设置About Me&lt;/h5&gt;
&lt;p&gt;默认官方生成出来的菜单中有很多选项，但是都没什么用，最关键的About Me竟然没有，我除了把Archives留下了，其他都删掉了。&lt;/p&gt;
&lt;p&gt;设置About Me的方法是，首先在content文件夹下新建一个文件夹，该名称为pages，将你要写的内容，制作成.md格式的内容，注意文件开头格式是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;About&lt;/span&gt; &lt;span class="n"&gt;Me&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; 
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;About&lt;/span&gt; &lt;span class="n"&gt;Me&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;并且添加代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ABOUT_URL&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pages/about-me&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ABOUT_SAVE_AS&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pages/about-me.html&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以及在MENU_INTERNAL_PAGES中添加 ('About Me', ABOUT_URL, ABOUT_SAVE_AS),&lt;/p&gt;
&lt;h5&gt;添加评论功能&lt;/h5&gt;
&lt;p&gt;使用DISQUS注册个账号，然后要生成个shortname，并且在pelicanconf.py中添加如下代码就好了，注意jonym是我的shortname：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;jonym&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是首页的第一篇文章也出现了评论框，目前没解决。&lt;/p&gt;
&lt;h5&gt;部署在顶级域名上&lt;/h5&gt;
&lt;p&gt;这个事情那其实没什么必要，但是既然做就做彻底：
- 第一步：需要购买个域名，很多文章都推荐使用国外的域名注册网站，我用的万网，阿里云旗下网站，也挺好的啊，也不用备案啊，英文实力不行或者墙总是翻不过去的或者没有国际信用卡的，用这个挺好；
- 第二步：在github里项目的根目录下面添加一个名称为CNAME的文件，注意这个文件连后缀都不能有，里面也只能有一条就是你注册的域名，http和www都不用写；
- 第三步：域名解析，在域名管理里面点击解析，要求输入IP，由于各种教程比较受到时间的影响，这哥们IP换过一次，我解析的时候用的是192.30.252.153，大家感觉有问题就上官网再查一下，有可能又有变化。&lt;/p&gt;
&lt;h5&gt;添加favicon图标&lt;/h5&gt;
&lt;p&gt;在本机测试的时候，总会告诉我们缺少两个名为favicon的文件.png的和.ico的，这是什么东西呢，其实就是在网址显示的旁边的极小的那个图标，做两个图标，放到根目录下面就好了，.ico的文件貌似需要在Win环境下完成，貌似先要生成.bmp文件，然后改后缀名。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然在Mac环境下肯定也有解决方案&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;添加404页面&lt;/h5&gt;
&lt;p&gt;404页面就是找不到了到那个页面，做一个名称为404.html 的文件然后放到根目录下面就可以了，如果你想要一个和整体主题一样，那就把生成的About Me的html文档复制一下改改就好了。&lt;/p&gt;
&lt;p&gt;目前能记得住的就这些坑了，大坑小坑一大堆，慢慢弄，这片文章对我来说纯是写给自己的，技术大哥们，求指导。&lt;/p&gt;
&lt;h4&gt;写这篇文章是的原因是不准备使用blue-penguin主题了&lt;/h4&gt;
&lt;p&gt;blue-penguin到目前我还没真正下定决心换掉，毕竟我很喜欢他的风格，而且花了不少心思的，但是这个blue-penguin主题自身非常不成熟，很多东西确实不知道怎么设置，比如设置在主页中文章的文字显示的长度，一直报错，更重要的是，这个主题并没有采用响应式的交互设计，虽然在手机上登录也没有问题，也挺好看的，接下来有可能换主题，希望喜欢用这个主题的朋友，本文能给到大家一点点的参考。
本文所写时，所对应的文件github网址：&lt;a href="https://github.com/jonym/Pelican-blue-penguin-jonymblog.git"&gt;https://github.com/jonym/Pelican-blue-penguin-jonymblog.git&lt;/a&gt;&lt;/p&gt;</summary><category term="编程"></category></entry><entry><title>这个Blog的基本用法</title><link href="/zhe-ge-blogde-ji-ben-yong-fa.html" rel="alternate"></link><updated>2015-11-15T21:13:00+08:00</updated><author><name>Jonym</name></author><id>tag:,2015-11-15:zhe-ge-blogde-ji-ben-yong-fa.html</id><summary type="html">&lt;p&gt;博客都已经有了，那计划如何使用呢？初步的想法，每个星期写一篇文章，文章分为四类：爱生活、会工作、涨姿势、学技能。&lt;/p&gt;
&lt;h4&gt;爱生活&lt;/h4&gt;
&lt;p&gt;爱生活主要写生活中发生的相关事情，生活中的心得与感悟，牢骚与吐槽，生活总是美好，怎么有理由不去爱呢。&lt;/p&gt;
&lt;h4&gt;会工作&lt;/h4&gt;
&lt;p&gt;工作需要有沉淀，记录工作中的所思所想，沉淀技能，既可以让自己有所积累，也能给同事以参考，建立工作上的知识管理体系。&lt;/p&gt;
&lt;h4&gt;涨姿势&lt;/h4&gt;
&lt;p&gt;书还是要读的，讲座还是要听的，不做记录么，一直连个读书笔记都没写明白，这次还不来个痛快。&lt;/p&gt;
&lt;h4&gt;学技能&lt;/h4&gt;
&lt;p&gt;你以为我只学了如何写代码么，别天真了，我可是产品经理诶，一项技能怎么够，最爱的乐谱，最棒的剧本，通通收进来。&lt;/p&gt;
&lt;p&gt;还等什么，这次写个痛快。&lt;/p&gt;</summary><category term="博客"></category></entry><entry><title>为什么要给自己建一个Blog</title><link href="/wei-shi-yao-yao-gei-zi-ji-jian-yi-ge-blog.html" rel="alternate"></link><updated>2015-11-15T14:58:00+08:00</updated><author><name>Jonym</name></author><id>tag:,2015-11-15:wei-shi-yao-yao-gei-zi-ji-jian-yi-ge-blog.html</id><summary type="html">&lt;p&gt;这个是一个严肃的问题，我是一个顶着产品经理头衔的培训师，严格意义上在做这个博客之前，我的计算机水平停留在大学的书本上，但真正的写代码，我是一点都不会。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;是的，我是信息管理与信息系统专业毕业的，无论是C语言、JAVA还是SQL，我都没挂科&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直到有一天，我认识了这样一个人：&lt;/p&gt;
&lt;p&gt;小马：勾哥，你写代码太帅了，收下我的膝盖。&lt;br&gt;
小勾：呵呵哒，我对编程天生有感觉。&lt;br&gt;
小马：我要学，我要学！！&lt;br&gt;
小勾：给你个教程自己看去吧。&lt;br&gt;
-python-HTML-CSS-小马阵亡。。。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;小勾：小马，我这里有款装逼神器，你要不要看一下啊？&lt;br&gt;
小马：我要，我要。&lt;br&gt;
小勾：这是我的BLOG，是不是很牛逼。&lt;br&gt;
小马：我也要弄，我也要弄。&lt;br&gt;
小勾：我是用github.io+Jekyll弄的，给你个教程自己看去吧。&lt;br&gt;
-github-Jekyll&lt;br&gt;
-Ruby（说好的python呢，搞不定）&lt;br&gt;
-Pelican-theme-小马阵亡。。。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;小马：勾哥，来个vim的教程。&lt;br&gt;
小勾：你是没有程序员的命，却得了程序员的病。&lt;br&gt;
小马：~~~&lt;br&gt;&lt;/p&gt;
&lt;p&gt;小马：看看看，这是最新的页面。&lt;br&gt;
小勾：你挺能折腾。&lt;br&gt;
小马：看看看，这是更新的页面。&lt;br&gt;
小勾：你接着折腾。&lt;br&gt;
小马：耶，成功了~~&lt;br&gt;
从10月16日到11月15日，认识小勾整一个月，自己建了一个博客，超有成就感，有时候，有人告诉你方向，比你自己傻傻努力要有效的多，至少你知道这个路能走通，能走通的路就值得坚定不移的向前走。&lt;/p&gt;
&lt;p&gt;另外还没有回答，为什么要给自己建一个Blog：&lt;br&gt;
都说了是装逼神器，装逼神器还能干啥。&lt;/p&gt;</summary><category term="博客"></category></entry></feed>